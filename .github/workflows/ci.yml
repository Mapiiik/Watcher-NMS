name: CI

on:
  push:
    branches:
      - master
      - '4.next'
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0']
        db-type: [pgsql]
        prefer-lowest: ['']
    name: PHP ${{ matrix.php-version }}

    steps:
    - name: Setup PostgreSQL latest
      if: matrix.db-type == 'pgsql'
      run: docker run --rm --name=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=watcher_nms -p 5432:5432 -d postgres
      
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, apcu, pdo_${{ matrix.db-type }}
        ini-values: apc.enable_cli = 1
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: |
        if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        else
          composer update
        fi

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export DB_URL='postgres://postgres:postgres@127.0.0.1/watcher_nms'; fi
        if [[ ${{ matrix.php-version }} == '8.0' ]]; then
          export CODECOVERAGE=1 && vendor/bin/phpunit --verbose --coverage-clover=coverage.xml
        else
          vendor/bin/phpunit
        fi

    - name: Submit code coverage
      if: matrix.php-version == '8.0'
      uses: codecov/codecov-action@v1

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, apcu, memcached, redis
        tools: cs2pr
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: composer stan-setup

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs -n --report=checkstyle src/ tests/ | cs2pr

    - name: Run psalm
      if: success() || failure()
      run: vendor/bin/psalm.phar --output-format=github

    - name: Run phpstan
      if: success() || failure()
      run: vendor/bin/phpstan.phar analyse --error-format=github
