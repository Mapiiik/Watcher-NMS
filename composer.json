{
    "name": "mapik/watcher-nms",
    "description": "Watcher NMS",
    "license": "GPL-2.0-only",
    "type": "project",
    "authors": [
        {
            "name": "Martin Patočka",
            "email": "mapik@mapik.net"
        }
    ],
    "homepage": "https://github.com/Mapiiik/Watcher-NMS",
    "support": {
        "issues": "https://github.com/Mapiiik/Watcher-NMS/issues",
        "source": "https://github.com/Mapiiik/Watcher-NMS"
    },
    "require": {
        "php": ">=8.1",
        "cakedc/users": "^12.0.0",
        "cakephp/cakephp": "^5.0.0",
        "cakephp/migrations": "^4.0.0",
        "cakephp/plugin-installer": "^2.0",
        "composer/composer": "^2.6.6",
        "dereuromark/cakephp-geo": "^3.0.0",
        "geocoder-php/google-maps-provider": "^4.7.1",
        "league/oauth2-google": "^4.0",
        "mapik/audit-log": "^5.0",
        "mobiledetect/mobiledetectlib": "^4.8"
    },
    "require-dev": {
        "cakedc/cakephp-phpstan": "^3.0.0",
        "cakephp/bake": "^3.0.0",
        "cakephp/cakephp-codesniffer": "^5.0",
        "cakephp/debug_kit": "^5.0.0",
        "josegonzalez/dotenv": "^4.0",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^1.8",
        "phpunit/phpunit": "^10.1.0",
        "psalm/phar": "^5.12"
    },
    "suggest": {
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan/Psalm compatibility.",
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "phpstan/phpstan": "PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code."
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "vendor/cakephp/cakephp/tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "cakephp/plugin-installer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "php-http/discovery": true,
            "phpstan/extension-installer": true
        },
        "sort-packages": true
    },
    "scripts": {
        "post-install-cmd": [
            "App\\Console\\Installer::postInstall"
        ],
        "post-update-cmd": [],
        "post-create-project-cmd": [
            "@migrations",
            "@schema-cache"
        ],
        "check": [
            "@test",
            "@cs-check"
        ],
        "cs-check": "phpcs --colors -p",
        "cs-fix": "phpcbf --colors -p",
        "migrations": [
            "bin/cake migrations migrate --plugin CakeDC/Users",
            "bin/cake migrations migrate"
        ],
        "schema-cache": [
            "bin/cake schema_cache build"
        ],
        "stan": "phpstan analyse",
        "test": "phpunit --colors=always"
    },
    "extra": {
        "discovery": {
            "psr/http-client-implementation": "Cake\\Http\\Client"
        }
    }
}
